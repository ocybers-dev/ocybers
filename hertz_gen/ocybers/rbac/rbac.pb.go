// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.2
// source: rbac.proto

package rbac

import (
	_ "github.com/ocybers-dev/ocybers/hertz_gen/cwgo/http/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建角色请求
type CreateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName string `protobuf:"bytes,1,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty" form:"role_name" query:"role_name"` // 角色名称
}

func (x *CreateRoleReq) Reset() {
	*x = CreateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleReq) ProtoMessage() {}

func (x *CreateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleReq.ProtoReflect.Descriptor instead.
func (*CreateRoleReq) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

// 创建角色响应
type CreateRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" form:"role_id" query:"role_id"` // 创建的角色ID
}

func (x *CreateRoleResp) Reset() {
	*x = CreateRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleResp) ProtoMessage() {}

func (x *CreateRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleResp.ProtoReflect.Descriptor instead.
func (*CreateRoleResp) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRoleResp) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

// 删除角色请求
type DeleteRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" form:"role_id" query:"role_id"` // 角色ID
}

func (x *DeleteRoleReq) Reset() {
	*x = DeleteRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleReq) ProtoMessage() {}

func (x *DeleteRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleReq.ProtoReflect.Descriptor instead.
func (*DeleteRoleReq) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteRoleReq) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

// 删除角色响应
type DeleteRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty" form:"success" query:"success"` // 删除是否成功
}

func (x *DeleteRoleResp) Reset() {
	*x = DeleteRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResp) ProtoMessage() {}

func (x *DeleteRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResp.ProtoReflect.Descriptor instead.
func (*DeleteRoleResp) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteRoleResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 为角色分配权限请求
type AssignPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId     string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" form:"role_id" query:"role_id"` // 角色ID
	Permission string `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty" form:"permission" query:"permission"` // 权限名称
}

func (x *AssignPermissionReq) Reset() {
	*x = AssignPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignPermissionReq) ProtoMessage() {}

func (x *AssignPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignPermissionReq.ProtoReflect.Descriptor instead.
func (*AssignPermissionReq) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{4}
}

func (x *AssignPermissionReq) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *AssignPermissionReq) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

// 为角色分配权限响应
type AssignPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty" form:"success" query:"success"` // 分配是否成功
}

func (x *AssignPermissionResp) Reset() {
	*x = AssignPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignPermissionResp) ProtoMessage() {}

func (x *AssignPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignPermissionResp.ProtoReflect.Descriptor instead.
func (*AssignPermissionResp) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{5}
}

func (x *AssignPermissionResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 撤销角色权限请求
type RevokePermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId     string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" form:"role_id" query:"role_id"` // 角色ID
	Permission string `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty" form:"permission" query:"permission"` // 权限名称
}

func (x *RevokePermissionReq) Reset() {
	*x = RevokePermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokePermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokePermissionReq) ProtoMessage() {}

func (x *RevokePermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokePermissionReq.ProtoReflect.Descriptor instead.
func (*RevokePermissionReq) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{6}
}

func (x *RevokePermissionReq) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *RevokePermissionReq) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

// 撤销角色权限响应
type RevokePermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty" form:"success" query:"success"` // 撤销是否成功
}

func (x *RevokePermissionResp) Reset() {
	*x = RevokePermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokePermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokePermissionResp) ProtoMessage() {}

func (x *RevokePermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokePermissionResp.ProtoReflect.Descriptor instead.
func (*RevokePermissionResp) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{7}
}

func (x *RevokePermissionResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 为用户分配角色请求
type AssignRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" form:"user_id" query:"user_id"` // 用户ID
	RoleId string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" form:"role_id" query:"role_id"` // 角色ID
}

func (x *AssignRoleReq) Reset() {
	*x = AssignRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRoleReq) ProtoMessage() {}

func (x *AssignRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRoleReq.ProtoReflect.Descriptor instead.
func (*AssignRoleReq) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{8}
}

func (x *AssignRoleReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AssignRoleReq) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

// 为用户分配角色响应
type AssignRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty" form:"success" query:"success"` // 分配是否成功
}

func (x *AssignRoleResp) Reset() {
	*x = AssignRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRoleResp) ProtoMessage() {}

func (x *AssignRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRoleResp.ProtoReflect.Descriptor instead.
func (*AssignRoleResp) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{9}
}

func (x *AssignRoleResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 撤销用户角色请求
type RevokeRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" form:"user_id" query:"user_id"` // 用户ID
	RoleId string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" form:"role_id" query:"role_id"` // 角色ID
}

func (x *RevokeRoleReq) Reset() {
	*x = RevokeRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeRoleReq) ProtoMessage() {}

func (x *RevokeRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeRoleReq.ProtoReflect.Descriptor instead.
func (*RevokeRoleReq) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{10}
}

func (x *RevokeRoleReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RevokeRoleReq) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

// 撤销用户角色响应
type RevokeRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty" form:"success" query:"success"` // 撤销是否成功
}

func (x *RevokeRoleResp) Reset() {
	*x = RevokeRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeRoleResp) ProtoMessage() {}

func (x *RevokeRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeRoleResp.ProtoReflect.Descriptor instead.
func (*RevokeRoleResp) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{11}
}

func (x *RevokeRoleResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 检查用户权限请求
type CheckPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" form:"user_id" query:"user_id"` // 用户ID
	Permission string `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty" form:"permission" query:"permission"` // 权限名称
}

func (x *CheckPermissionReq) Reset() {
	*x = CheckPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionReq) ProtoMessage() {}

func (x *CheckPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionReq.ProtoReflect.Descriptor instead.
func (*CheckPermissionReq) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{12}
}

func (x *CheckPermissionReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckPermissionReq) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

// 检查用户权限响应
type CheckPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasPermission bool `protobuf:"varint,1,opt,name=has_permission,json=hasPermission,proto3" json:"has_permission,omitempty" form:"has_permission" query:"has_permission"` // 是否具有该权限
}

func (x *CheckPermissionResp) Reset() {
	*x = CheckPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionResp) ProtoMessage() {}

func (x *CheckPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionResp.ProtoReflect.Descriptor instead.
func (*CheckPermissionResp) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{13}
}

func (x *CheckPermissionResp) GetHasPermission() bool {
	if x != nil {
		return x.HasPermission
	}
	return false
}

// 获取角色权限请求
type GetRolePermissionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty" form:"role_id" query:"role_id"` // 角色ID
}

func (x *GetRolePermissionsReq) Reset() {
	*x = GetRolePermissionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolePermissionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolePermissionsReq) ProtoMessage() {}

func (x *GetRolePermissionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolePermissionsReq.ProtoReflect.Descriptor instead.
func (*GetRolePermissionsReq) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{14}
}

func (x *GetRolePermissionsReq) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

// 获取角色权限响应
type GetRolePermissionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions []string `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty" form:"permissions" query:"permissions"` // 角色拥有的权限列表
}

func (x *GetRolePermissionsResp) Reset() {
	*x = GetRolePermissionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolePermissionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolePermissionsResp) ProtoMessage() {}

func (x *GetRolePermissionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolePermissionsResp.ProtoReflect.Descriptor instead.
func (*GetRolePermissionsResp) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{15}
}

func (x *GetRolePermissionsResp) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// 获取用户角色请求
type GetUserRolesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" form:"user_id" query:"user_id"` // 用户ID
}

func (x *GetUserRolesReq) Reset() {
	*x = GetUserRolesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRolesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRolesReq) ProtoMessage() {}

func (x *GetUserRolesReq) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRolesReq.ProtoReflect.Descriptor instead.
func (*GetUserRolesReq) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserRolesReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 获取用户角色响应
type GetUserRolesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []string `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty" form:"roles" query:"roles"` // 用户拥有的角色列表
}

func (x *GetUserRolesResp) Reset() {
	*x = GetUserRolesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRolesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRolesResp) ProtoMessage() {}

func (x *GetUserRolesResp) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRolesResp.ProtoReflect.Descriptor instead.
func (*GetUserRolesResp) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserRolesResp) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

// 获取所有角色请求
type GetAllRolesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllRolesReq) Reset() {
	*x = GetAllRolesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRolesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRolesReq) ProtoMessage() {}

func (x *GetAllRolesReq) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRolesReq.ProtoReflect.Descriptor instead.
func (*GetAllRolesReq) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{18}
}

// 获取所有角色响应
type GetAllRolesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []string `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty" form:"roles" query:"roles"` // 所有角色列表
}

func (x *GetAllRolesResp) Reset() {
	*x = GetAllRolesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRolesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRolesResp) ProtoMessage() {}

func (x *GetAllRolesResp) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRolesResp.ProtoReflect.Descriptor instead.
func (*GetAllRolesResp) Descriptor() ([]byte, []int) {
	return file_rbac_proto_rawDescGZIP(), []int{19}
}

func (x *GetAllRolesResp) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

var File_rbac_proto protoreflect.FileDescriptor

var file_rbac_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x62,
	0x61, 0x63, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x2a, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4e, 0x0a, 0x13,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x14,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4e,
	0x0a, 0x13, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x30,
	0x0a, 0x14, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x41, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x41, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x2a, 0x0a, 0x0e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4d,
	0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x0a,
	0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x3a, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2a, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22,
	0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x32, 0xce, 0x07, 0x0a, 0x0b, 0x52,
	0x42, 0x41, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x13, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x15, 0xd2, 0xc1, 0x18, 0x11, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x13, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x15, 0xd2, 0xc1, 0x18, 0x11, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x6c, 0x0a, 0x16, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1b, 0xd2, 0xc1, 0x18,
	0x17, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x18, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1b, 0xd2, 0xc1, 0x18,
	0x17, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x72,
	0x62, 0x61, 0x63, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0xd2, 0xc1, 0x18, 0x19, 0x2f, 0x72, 0x62,
	0x61, 0x63, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x74,
	0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x12, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x72,
	0x62, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0xd2, 0xc1, 0x18, 0x1b, 0x2f, 0x72, 0x62,
	0x61, 0x63, 0x2f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x62, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x72, 0x62,
	0x61, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x1a, 0xca, 0xc1, 0x18, 0x16, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1e, 0xca,
	0xc1, 0x18, 0x1a, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x57, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x15, 0x2e,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x18, 0xca, 0xc1,
	0x18, 0x14, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x72, 0x62,
	0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x17, 0xca, 0xc1, 0x18, 0x13, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x67, 0x65,
	0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x42, 0x37, 0x5a, 0x35, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x63, 0x79, 0x62, 0x65, 0x72,
	0x73, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x6f, 0x63, 0x79, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x68, 0x65,
	0x72, 0x74, 0x7a, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x6f, 0x63, 0x79, 0x62, 0x65, 0x72, 0x73, 0x2f,
	0x72, 0x62, 0x61, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rbac_proto_rawDescOnce sync.Once
	file_rbac_proto_rawDescData = file_rbac_proto_rawDesc
)

func file_rbac_proto_rawDescGZIP() []byte {
	file_rbac_proto_rawDescOnce.Do(func() {
		file_rbac_proto_rawDescData = protoimpl.X.CompressGZIP(file_rbac_proto_rawDescData)
	})
	return file_rbac_proto_rawDescData
}

var file_rbac_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_rbac_proto_goTypes = []interface{}{
	(*CreateRoleReq)(nil),          // 0: rbac.CreateRoleReq
	(*CreateRoleResp)(nil),         // 1: rbac.CreateRoleResp
	(*DeleteRoleReq)(nil),          // 2: rbac.DeleteRoleReq
	(*DeleteRoleResp)(nil),         // 3: rbac.DeleteRoleResp
	(*AssignPermissionReq)(nil),    // 4: rbac.AssignPermissionReq
	(*AssignPermissionResp)(nil),   // 5: rbac.AssignPermissionResp
	(*RevokePermissionReq)(nil),    // 6: rbac.RevokePermissionReq
	(*RevokePermissionResp)(nil),   // 7: rbac.RevokePermissionResp
	(*AssignRoleReq)(nil),          // 8: rbac.AssignRoleReq
	(*AssignRoleResp)(nil),         // 9: rbac.AssignRoleResp
	(*RevokeRoleReq)(nil),          // 10: rbac.RevokeRoleReq
	(*RevokeRoleResp)(nil),         // 11: rbac.RevokeRoleResp
	(*CheckPermissionReq)(nil),     // 12: rbac.CheckPermissionReq
	(*CheckPermissionResp)(nil),    // 13: rbac.CheckPermissionResp
	(*GetRolePermissionsReq)(nil),  // 14: rbac.GetRolePermissionsReq
	(*GetRolePermissionsResp)(nil), // 15: rbac.GetRolePermissionsResp
	(*GetUserRolesReq)(nil),        // 16: rbac.GetUserRolesReq
	(*GetUserRolesResp)(nil),       // 17: rbac.GetUserRolesResp
	(*GetAllRolesReq)(nil),         // 18: rbac.GetAllRolesReq
	(*GetAllRolesResp)(nil),        // 19: rbac.GetAllRolesResp
}
var file_rbac_proto_depIdxs = []int32{
	0,  // 0: rbac.RBACService.CreateRole:input_type -> rbac.CreateRoleReq
	2,  // 1: rbac.RBACService.DeleteRole:input_type -> rbac.DeleteRoleReq
	4,  // 2: rbac.RBACService.AssignPermissionToRole:input_type -> rbac.AssignPermissionReq
	6,  // 3: rbac.RBACService.RevokePermissionFromRole:input_type -> rbac.RevokePermissionReq
	8,  // 4: rbac.RBACService.AssignRoleToUser:input_type -> rbac.AssignRoleReq
	10, // 5: rbac.RBACService.RevokeRoleFromUser:input_type -> rbac.RevokeRoleReq
	12, // 6: rbac.RBACService.CheckPermission:input_type -> rbac.CheckPermissionReq
	14, // 7: rbac.RBACService.GetRolePermissions:input_type -> rbac.GetRolePermissionsReq
	16, // 8: rbac.RBACService.GetUserRoles:input_type -> rbac.GetUserRolesReq
	18, // 9: rbac.RBACService.GetAllRoles:input_type -> rbac.GetAllRolesReq
	1,  // 10: rbac.RBACService.CreateRole:output_type -> rbac.CreateRoleResp
	3,  // 11: rbac.RBACService.DeleteRole:output_type -> rbac.DeleteRoleResp
	5,  // 12: rbac.RBACService.AssignPermissionToRole:output_type -> rbac.AssignPermissionResp
	7,  // 13: rbac.RBACService.RevokePermissionFromRole:output_type -> rbac.RevokePermissionResp
	9,  // 14: rbac.RBACService.AssignRoleToUser:output_type -> rbac.AssignRoleResp
	11, // 15: rbac.RBACService.RevokeRoleFromUser:output_type -> rbac.RevokeRoleResp
	13, // 16: rbac.RBACService.CheckPermission:output_type -> rbac.CheckPermissionResp
	15, // 17: rbac.RBACService.GetRolePermissions:output_type -> rbac.GetRolePermissionsResp
	17, // 18: rbac.RBACService.GetUserRoles:output_type -> rbac.GetUserRolesResp
	19, // 19: rbac.RBACService.GetAllRoles:output_type -> rbac.GetAllRolesResp
	10, // [10:20] is the sub-list for method output_type
	0,  // [0:10] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_rbac_proto_init() }
func file_rbac_proto_init() {
	if File_rbac_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rbac_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokePermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokePermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolePermissionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolePermissionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRolesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRolesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRolesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRolesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rbac_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rbac_proto_goTypes,
		DependencyIndexes: file_rbac_proto_depIdxs,
		MessageInfos:      file_rbac_proto_msgTypes,
	}.Build()
	File_rbac_proto = out.File
	file_rbac_proto_rawDesc = nil
	file_rbac_proto_goTypes = nil
	file_rbac_proto_depIdxs = nil
}
